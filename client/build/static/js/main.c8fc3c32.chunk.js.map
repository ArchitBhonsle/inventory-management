{"version":3,"sources":["components/TotalViewItem/TotalViewItem.module.css","components/AdminItem/AdminItem.module.css","pages/home/home.module.css","pages/totalview/totalview.module.css","components/Navbar/Navbar.module.css","pages/login/login.jsx","components/Profile/Profile.jsx","components/TotalViewItem/TotalViewItem.jsx","pages/home/home.jsx","components/HistoryItem/HistoryItem.jsx","pages/history/history.jsx","pages/admin/admin.jsx","pages/adminregister/adminregister.jsx","components/AdminItem/AdminItem.jsx","components/AdminAddItem/AdminAddItem.jsx","pages/items/items.jsx","pages/totalview/totalview.jsx","components/Navbar/Navbar.jsx","App.js","serviceWorker.js","index.js","pages/adminregister/adminregister.module.css","pages/login/login.module.css","components/Profile/Profile.module.css","components/HistoryItem/HistoryItem.module.css","pages/items/items.module.css"],"names":["module","exports","LOGIN_QUERY","gql","Login","useState","usernameOrEmail","password","form","setForm","errors","error","setError","useMutation","runLoginQuery","data","useEffect","login","window","location","Grid","container","className","styles","item","sm","Typography","variant","pageTitle","noValidate","TextField","id","name","type","label","fullWidth","textField","value","helperText","onChange","e","target","Button","color","button","onClick","preventDefault","variables","LOGOUT_MUTATION","Profile","username","bio","department","image","logout","client","history","useHistory","clearStore","push","Paper","paper","profile","profileImage","src","alt","hruler","profileDetails","LocationOn","Tooltip","title","placement","IconButton","ExitToApp","TotalViewItem","Card","root","CardMedia","media","CardContent","gutterBottom","component","ME_QUERY","MEITEMS_QUERY","Home","medata","useQuery","uoe","me","itemdata","skip","list","getUsersItems","undefined","map","obj","key","spacing","xs","main","Link","to","HistoryItem","timeOfTransfer","additiondata","details","content","cover","HISTORYITEM_QUERY","History","props","match","params","histi","hisitems","getItemById","Admin","meData","isAdmin","REGISTER_MUTATION","Adminregister","firstname","lastname","designation","email","console","log","runRegisterMutation","newimage","FormControl","formControl","InputLabel","Select","MenuItem","accept","input","multiple","file","files","reader","FileReader","readAsDataURL","onload","result","convertImageToBase64","htmlFor","AdminItem","CardActionArea","ITEMADD_MUTATION","AdminAddItem","desc","loc","cat","runItemAddMutation","open","setOpen","handleClose","Fab","size","aria-label","margin","Dialog","onClose","maxWidth","DialogTitle","DialogContent","multiline","row","style","display","DialogActions","ITEMS_QUERY","Items","category","setCategory","useLazyQuery","runItemsQuery","items","setItems","getItemsByDepartmentAndCategory","ind","additems","header","ITEM_QUERY","TRANSFER_QUERY","Totalview","itemtot","itemId","runTransferQuery","transfer","Navbar","navbar","AppBar","Toolbar","App","exact","path","home","admin","adminregister","totalview","Boolean","hostname","link","createHttpLink","uri","credentials","ApolloClient","cache","InMemoryCache","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c8fc3c32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"media\":\"TotalViewItem_media__smF7v\",\"root\":\"TotalViewItem_root__2I0gJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"media\":\"AdminItem_media__1GeoM\",\"root\":\"AdminItem_root__1lqB8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"home_main__2meb2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transfer\":\"totalview_transfer__2Q_Wn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navbar_container__2A-j0\"};","import React, { useState, useEffect } from 'react';\r\n\r\n//material ui\r\nimport { Grid, Typography, TextField, Button } from '@material-ui/core';\r\n\r\n//styles\r\nimport styles from './login.module.css';\r\n\r\n//graphql\r\nimport { gql, useMutation } from '@apollo/client';\r\n\r\nconst LOGIN_QUERY = gql`\r\n  mutation login($usernameOrEmail: String!, $password: String!) {\r\n    login(usernameOrEmail: $usernameOrEmail, password: $password)\r\n  }\r\n`;\r\n\r\nconst Login = () => {\r\n  const [ form, setForm ] = useState({\r\n    usernameOrEmail : '',\r\n    password        : ''\r\n  });\r\n\r\n  const [ error, setError ] = useState({\r\n    errors : null\r\n  });\r\n\r\n  const [ runLoginQuery, { data } ] = useMutation(LOGIN_QUERY);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    runLoginQuery({\r\n      variables : form\r\n    });\r\n\r\n    // console.log(data);\r\n  };\r\n  useEffect(\r\n    () => {\r\n      if (\r\n        data &&\r\n        (data.login === 'wrong passoword' ||\r\n          data.login === 'neither a username or an email' ||\r\n          data.login === 'user not found')\r\n      ) {\r\n        // console.log(data.Login);\r\n        setError({ errors: 'Invalid' });\r\n      }\r\n\r\n      if (data && data.login === 'successfully logged in') {\r\n        window.location = '/home';\r\n      }\r\n    },\r\n    [ data ]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Grid container className={styles.form}>\r\n        <Grid item sm />\r\n        <Grid item sm>\r\n          <Typography variant=\"h2\" className={styles.pageTitle}>\r\n            Login\r\n          </Typography>\r\n          <form noValidate>\r\n            <TextField\r\n              id=\"username\"\r\n              name=\"username\"\r\n              type=\"text\"\r\n              label=\"Username / Email\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              className={styles.textField}\r\n              value={form.usernameOrEmail}\r\n              helperText={error.errors}\r\n              error={error.errors ? true : false}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  usernameOrEmail : e.target.value\r\n                })}\r\n            />\r\n            <TextField\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              className={styles.textField}\r\n              value={form.password}\r\n              helperText={error.errors}\r\n              error={error.errors ? true : false}\r\n              onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={styles.button}\r\n              onClick={onSubmit}\r\n            >\r\n              Login\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n        <Grid item sm />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//material ui\r\nimport { Paper, Typography, Tooltip, IconButton } from \"@material-ui/core\";\r\n\r\n//dumb way to get link\r\nimport MuiLink from \"@material-ui/core/Link\";\r\n\r\n//icons\r\nimport { LocationOn, ExitToApp } from \"@material-ui/icons\";\r\n\r\n//graphql\r\nimport { gql, useMutation } from \"@apollo/client\";\r\n\r\n//styles\r\nimport styles from \"./Profile.module.css\";\r\n\r\nconst LOGOUT_MUTATION = gql`\r\n  mutation logout {\r\n    logout\r\n  }\r\n`;\r\n\r\nconst Profile = ({ data: { username, bio, department, image } }) => {\r\n  const [logout, { data, client }] = useMutation(LOGOUT_MUTATION);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      if (data.logout === \"logged out\") {\r\n        client.clearStore();\r\n        history.push(\"/\");\r\n      } else if (data.logout === \"unknown error please try again\") {\r\n        // handle error\r\n      }\r\n    }\r\n  }, [data, client, history]);\r\n\r\n  return (\r\n    <Paper className={styles.paper}>\r\n      <div className={styles.profile}>\r\n        <div className={styles.profileImage}>\r\n          <img src={image} alt=\"profilepic\" />\r\n        </div>\r\n        <hr className={styles.hruler} />\r\n        <div className={styles.profileDetails}>\r\n          <MuiLink color=\"primary\" variant=\"h5\">\r\n            {username}\r\n          </MuiLink>\r\n          <hr />\r\n\r\n          <Fragment>\r\n            <Typography variant=\"body2\">{bio}</Typography>\r\n            <hr />\r\n          </Fragment>\r\n\r\n          <Fragment>\r\n            <LocationOn color=\"primary\" /> <span>{department}</span>\r\n            <hr />\r\n          </Fragment>\r\n        </div>\r\n        <Tooltip title=\"Logout\" placement=\"right\">\r\n          <IconButton onClick={logout}>\r\n            <ExitToApp color=\"primary\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n\r\n//material ui\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n//styles\r\nimport styles from \"./TotalViewItem.module.css\";\r\n\r\nconst TotalViewItem = ({ data: { name, location, image, id, department } }) => {\r\n  return (\r\n    <Card className={styles.root}>\r\n      <CardMedia className={styles.media} image={image} />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {name}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {location}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {department}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {id}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TotalViewItem;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//material ui\r\nimport { Button, Grid, Paper } from \"@material-ui/core\";\r\n\r\n//components\r\nimport Profile from \"../../components/Profile/Profile\";\r\n\r\nimport TotalViewItem from \"../../components/TotalViewItem/TotalViewItem\";\r\n\r\n//graphql\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\n//styles\r\nimport styles from \"./home.module.css\";\r\n\r\nconst ME_QUERY = gql`\r\n  query {\r\n    me {\r\n      username\r\n      items\r\n      bio\r\n      department\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\nconst MEITEMS_QUERY = gql`\r\n  query getUsersItems($uoe: String!) {\r\n    getUsersItems(usernameOrEmail: $uoe) {\r\n      id\r\n      name\r\n      department\r\n\r\n      location\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\nconst Home = () => {\r\n  const { data: medata } = useQuery(ME_QUERY);\r\n  const uoe = medata?.me?.username;\r\n  const { data: itemdata } = useQuery(MEITEMS_QUERY, {\r\n    skip: !uoe,\r\n    variables: { uoe },\r\n  });\r\n\r\n  let list = null;\r\n\r\n  if (\r\n    itemdata &&\r\n    itemdata.getUsersItems &&\r\n    medata !== undefined &&\r\n    medata.me !== null\r\n  ) {\r\n    list = itemdata.getUsersItems.map((obj) => {\r\n      // console.log(obj);\r\n      return <TotalViewItem key={obj.id} data={obj} />;\r\n    });\r\n  }\r\n\r\n  let render = null;\r\n\r\n  if (medata !== undefined && medata.me !== null) {\r\n    render = medata ? (\r\n      <Grid container spacing={4}>\r\n        <Grid item sm={8} xs={12}>\r\n          <h1>Current Items</h1>\r\n\r\n          {list}\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          <Profile data={medata.me} />\r\n        </Grid>\r\n      </Grid>\r\n    ) : (\r\n      <h1>Loading</h1>\r\n    );\r\n  } else {\r\n    render = (\r\n      <div className={styles.main}>\r\n        <Paper>\r\n          <h1>Please Log In</h1>\r\n          <Button component={Link} to=\"/\" color=\"secondary\" variant=\"outlined\">\r\n            Log In\r\n          </Button>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return render;\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\n//material ui\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport styles from './HistoryItem.module.css';\r\nconst HistoryItem = ({\r\n  data         : { name, timeOfTransfer },\r\n  additiondata : { id, image, location }\r\n}) => {\r\n  return (\r\n    <div className={styles.main}>\r\n      <Card className={styles.root}>\r\n        <div className={styles.details}>\r\n          <CardContent className={styles.content}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n              {name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n              {id}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n              {location}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n              {timeOfTransfer}\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n\r\n        <CardMedia\r\n          className={styles.cover}\r\n          image={image}\r\n          title=\"Live from space album cover\"\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryItem;\r\n","import React, { Fragment } from 'react';\r\n\r\n//component\r\nimport HistoryItem from '../../components/HistoryItem/HistoryItem';\r\n\r\nimport { gql, useQuery } from '@apollo/client';\r\n\r\nconst HISTORYITEM_QUERY = gql`\r\n  query itemById($id: String!) {\r\n    getItemById(id: $id) {\r\n      name\r\n      id\r\n      location\r\n      history {\r\n        name\r\n        isDepartment\r\n        timeOfTransfer\r\n      }\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\nconst History = (props) => {\r\n  let id = null;\r\n\r\n  id = props.match.params.id;\r\n\r\n  // console.log(id);\r\n\r\n  const { data: histi } = useQuery(HISTORYITEM_QUERY, { variables: { id } });\r\n\r\n  let hisitems = null;\r\n  if (histi && histi.getItemById !== null) {\r\n    // console.log(histi.getItemById);\r\n    hisitems = histi.getItemById.history.map((obj) => {\r\n      return <HistoryItem data={obj} additiondata={histi.getItemById} />;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1>Item History</h1>\r\n      {hisitems}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//material ui\r\nimport { Button, Grid } from '@material-ui/core';\r\n\r\n//components\r\nimport Profile from '../../components/Profile/Profile';\r\n\r\n//graphql\r\nimport { gql, useQuery } from '@apollo/client';\r\n\r\nconst ME_QUERY = gql`\r\n  query {\r\n    me {\r\n      username\r\n      items\r\n      bio\r\n      isAdmin\r\n      department\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\nconst Admin = () => {\r\n  const { data: meData } = useQuery(ME_QUERY);\r\n  // console.log(medata);\r\n\r\n  let render = null;\r\n\r\n  if (meData && meData.me.isAdmin === true) {\r\n    render =\r\n      meData && meData.me !== null ? (\r\n        <Grid container spacing={4}>\r\n          <Grid item sm={8} xs={12}>\r\n            <h1>Deparment Items</h1>\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              component={Link}\r\n              to={`/items`}\r\n            >\r\n              Items\r\n            </Button>\r\n          </Grid>\r\n          <Grid item sm={4} xs={12}>\r\n            <Profile data={meData.me} />\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <h1>Loading</h1>\r\n      );\r\n  } else {\r\n    render = <h1>Not Admin</h1>;\r\n  }\r\n\r\n  return render;\r\n};\r\n\r\nexport default Admin;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n//material ui\r\nimport { Grid, Typography, TextField, Button } from \"@material-ui/core\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\n//graphql\r\nimport { gql, useMutation } from \"@apollo/client\";\r\n\r\n//styles\r\nimport styles from \"./adminregister.module.css\";\r\n\r\nconst REGISTER_MUTATION = gql`\r\n  mutation register(\r\n    $isAdmin: Boolean!\r\n    $firstname: String!\r\n    $lastname: String!\r\n    $image: String!\r\n    $bio: String!\r\n    $designation: String!\r\n    $department: String!\r\n    $email: String!\r\n    $username: String!\r\n    $password: String!\r\n  ) {\r\n    register(\r\n      isAdmin: $isAdmin\r\n      firstname: $firstname\r\n      lastname: $lastname\r\n      image: $image\r\n      bio: $bio\r\n      designation: $designation\r\n      department: $department\r\n      email: $email\r\n      username: $username\r\n      password: $password\r\n    )\r\n  }\r\n`;\r\n\r\nconst Adminregister = () => {\r\n  const [form, setForm] = useState({\r\n    isAdmin: false,\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    image: \"\",\r\n    bio: \"\",\r\n    designation: \"\",\r\n    department: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(form);\r\n  }, [form]);\r\n\r\n  const [runRegisterMutation, { data }] = useMutation(REGISTER_MUTATION);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    runRegisterMutation({\r\n      variables: form,\r\n    });\r\n\r\n    window.location = \"/\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n  }, [data]);\r\n\r\n  let newimage = \"\";\r\n  const convertImageToBase64 = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      console.log(file);\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        newimage = reader.result;\r\n        console.log(newimage);\r\n        setForm({\r\n          ...form,\r\n          image: newimage,\r\n        });\r\n      };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container className={styles.form}>\r\n        <Grid item sm />\r\n        <Grid item sm>\r\n          <Typography variant=\"h2\" className={styles.pageTitle}>\r\n            Register\r\n          </Typography>\r\n\r\n          <form noValidate>\r\n            <FormControl className={styles.formControl}>\r\n              <InputLabel>Is Admin</InputLabel>\r\n              <Select\r\n                label=\"Boolean\"\r\n                onChange={(e) =>\r\n                  setForm({\r\n                    ...form,\r\n                    isAdmin: e.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <MenuItem value={false}>False</MenuItem>\r\n                <MenuItem value={true}>True</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              id=\"username\"\r\n              name=\"username\"\r\n              type=\"text\"\r\n              label=\"Username \"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              className={styles.textField}\r\n              value={form.username}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  username: e.target.value,\r\n                })\r\n              }\r\n            />\r\n            <TextField\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"text\"\r\n              label=\"Email\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              className={styles.textField}\r\n              value={form.email}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  email: e.target.value,\r\n                })\r\n              }\r\n            />\r\n            <TextField\r\n              id=\"firstname\"\r\n              name=\"firstname\"\r\n              type=\"text\"\r\n              label=\"Firstname\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              className={styles.textField}\r\n              value={form.firstname}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  firstname: e.target.value,\r\n                })\r\n              }\r\n            />\r\n            <TextField\r\n              id=\"lastname\"\r\n              name=\"lastname\"\r\n              type=\"text\"\r\n              label=\"Lastname\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              className={styles.textField}\r\n              value={form.lastname}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  lastname: e.target.value,\r\n                })\r\n              }\r\n            />\r\n            <TextField\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              className={styles.textField}\r\n              value={form.password}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  password: e.target.value,\r\n                })\r\n              }\r\n            />\r\n            <TextField\r\n              id=\"department\"\r\n              name=\"department\"\r\n              type=\"text\"\r\n              label=\"Department\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              className={styles.textField}\r\n              value={form.department}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  department: e.target.value,\r\n                })\r\n              }\r\n            />\r\n            <TextField\r\n              id=\"designation\"\r\n              name=\"designation\"\r\n              type=\"text\"\r\n              label=\"Designation\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              className={styles.textField}\r\n              value={form.designation}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  designation: e.target.value,\r\n                })\r\n              }\r\n            />\r\n            <TextField\r\n              id=\"bio\"\r\n              name=\"bio\"\r\n              type=\"text\"\r\n              label=\"Bio\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              className={styles.textField}\r\n              value={form.bio}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  bio: e.target.value,\r\n                })\r\n              }\r\n            />\r\n            <div>\r\n              <input\r\n                id=\"image\"\r\n                accept=\"image/*\"\r\n                className={styles.input}\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => convertImageToBase64(e)}\r\n              />\r\n              <label htmlFor=\"image\">\r\n                <Button variant=\"outlined\" color=\"secondary\" component=\"span\">\r\n                  Upload Image\r\n                </Button>\r\n              </label>\r\n            </div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={styles.button}\r\n              onClick={onSubmit}\r\n            >\r\n              Register\r\n            </Button>\r\n          </form>\r\n        </Grid>\r\n        <Grid item sm />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Adminregister;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//material ui\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//styles\r\nimport styles from './AdminItem.module.css';\r\n\r\nconst AdminItem = ({\r\n  data : { name, location, image, history, id, department }\r\n}) => {\r\n  return (\r\n    <Card className={styles.root}>\r\n      <CardActionArea component={Link} to={`totalview/${id}`}>\r\n        <CardMedia className={styles.media} image={image} />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {location}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {department}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            ID #{id}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AdminItem;\r\n","import React, { useState } from 'react';\r\n\r\n//material ui\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n//graphql\r\nimport { gql, useMutation } from '@apollo/client';\r\n\r\n//styles\r\nimport styles from './AdminAddItem';\r\n\r\nconst ITEMADD_MUTATION = gql`\r\n  mutation createItem(\r\n    $name: String!\r\n    $image: String!\r\n    $desc: String!\r\n    $loc: String!\r\n    $cat: String!\r\n  ) {\r\n    createItem(\r\n      name: $name\r\n      image: $image\r\n      description: $desc\r\n      location: $loc\r\n      category: $cat\r\n    )\r\n  }\r\n`;\r\n\r\nconst AdminAddItem = () => {\r\n  const [ form, setForm ] = useState({\r\n    name  : '',\r\n    desc  : '',\r\n    loc   : '',\r\n    cat   : '',\r\n    image : ''\r\n  });\r\n\r\n  const [ runItemAddMutation ] = useMutation(ITEMADD_MUTATION);\r\n\r\n  const [ open, setOpen ] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    runItemAddMutation({\r\n      variables : form\r\n    });\r\n\r\n    handleClose();\r\n  };\r\n\r\n  let newimage = '';\r\n  const convertImageToBase64 = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      console.log(file);\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        newimage = reader.result;\r\n        console.log(newimage);\r\n        setForm({\r\n          ...form,\r\n          image : newimage\r\n        });\r\n      };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fab\r\n      size=\"medium\"\r\n      color=\"secondary\"\r\n      aria-label=\"add\"\r\n      className={styles.margin}\r\n    >\r\n      <AddIcon onClick={handleClickOpen} />\r\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\r\n        <DialogTitle>Add your post</DialogTitle>\r\n        <DialogContent>\r\n          <form noValidate>\r\n            <TextField\r\n              name=\"name\"\r\n              type=\"text\"\r\n              label=\"Item-name\"\r\n              multiline\r\n              value={form.name}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  name : e.target.value\r\n                })}\r\n              row=\"3\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              name=\"description\"\r\n              type=\"text\"\r\n              label=\"Description\"\r\n              value={form.desc}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  desc : e.target.value\r\n                })}\r\n              multiline\r\n              row=\"3\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              name=\"location\"\r\n              type=\"text\"\r\n              label=\"Location\"\r\n              value={form.loc}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  loc : e.target.value\r\n                })}\r\n              multiline\r\n              row=\"3\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              name=\"category\"\r\n              type=\"text\"\r\n              label=\"category\"\r\n              value={form.cat}\r\n              onChange={(e) =>\r\n                setForm({\r\n                  ...form,\r\n                  cat : e.target.value\r\n                })}\r\n              multiline\r\n              row=\"3\"\r\n              fullWidth\r\n            />\r\n\r\n            <input\r\n              id=\"image\"\r\n              accept=\"image/*\"\r\n              style={{ display: 'none' }}\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(e) => convertImageToBase64(e)}\r\n            />\r\n            <label htmlFor=\"image\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                component=\"span\"\r\n                className={styles.input}\r\n              >\r\n                Upload Image\r\n              </Button>\r\n            </label>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions onClose={handleClose}>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fab>\r\n  );\r\n};\r\n\r\nexport default AdminAddItem;\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\n\r\n//material ui\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n//components\r\nimport AdminItem from '../../components/AdminItem/AdminItem';\r\nimport AdminAddItem from '../../components/AdminAddItem/AdminAddItem';\r\n\r\n//graphql\r\nimport { gql, useQuery, useLazyQuery } from '@apollo/client';\r\n\r\n//styles\r\nimport styles from './items.module.css';\r\n\r\nconst ME_QUERY = gql`\r\n  query {\r\n    me {\r\n      username\r\n      items\r\n      bio\r\n      isAdmin\r\n      department\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\nconst ITEMS_QUERY = gql`\r\n  query getItemsByDepartmentAndCategory(\r\n    $category: String!\r\n    $department: String!\r\n  ) {\r\n    getItemsByDepartmentAndCategory(\r\n      category: $category\r\n      department: $department\r\n    ) {\r\n      id\r\n      name\r\n      location\r\n      department\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\nconst Items = () => {\r\n  const { data: meData } = useQuery(ME_QUERY);\r\n  let department = undefined;\r\n  if (meData && meData.me) department = meData.me.department;\r\n\r\n  const [ category, setCategory ] = useState('');\r\n  const [ runItemsQuery, { data } ] = useLazyQuery(ITEMS_QUERY);\r\n  const [ items, setItems ] = useState(null);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (department) {\r\n        runItemsQuery({\r\n          variables : { department, category }\r\n        });\r\n      }\r\n    },\r\n    [ category, department, runItemsQuery ]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (data && data.getItemsByDepartmentAndCategory) {\r\n        setItems(\r\n          data.getItemsByDepartmentAndCategory.map((item, ind) => {\r\n            return <AdminItem data={item} key={ind} />;\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [ data ]\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={styles.additems}>\r\n        <h1>Add Items</h1>\r\n        <AdminAddItem />\r\n      </div>\r\n\r\n      <Typography variant=\"h3\" color=\"textSecondary\" className={styles.header}>\r\n        <FormControl className={styles.formControl}>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            label=\"Category\"\r\n            onChange={(e) => {\r\n              setCategory(e.target.value);\r\n            }}\r\n            value={category}\r\n          >\r\n            <MenuItem value=\"\">None</MenuItem>\r\n            <MenuItem value=\"arms\">Arms</MenuItem>\r\n            <MenuItem value=\"clothing\">Clothing</MenuItem>\r\n            <MenuItem value=\"evidence\">Evidence</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Typography>\r\n\r\n      <Grid container spacing={4}>\r\n        {items}\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Items;\r\n","import React, { Fragment, useState } from 'react';\r\n\r\n//component\r\nimport HistoryItem from '../../components/HistoryItem/HistoryItem';\r\nimport TotalViewItem from '../../components/TotalViewItem/TotalViewItem';\r\n\r\n//material ui\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { gql, useQuery, useMutation } from '@apollo/client';\r\nimport { Button } from '@material-ui/core';\r\n\r\n//styles\r\nimport styles from './totalview.module.css';\r\n\r\nconst HISTORYITEM_QUERY = gql`\r\n  query itemById($id: String!) {\r\n    getItemById(id: $id) {\r\n      name\r\n      id\r\n      location\r\n      history {\r\n        name\r\n        isDepartment\r\n        timeOfTransfer\r\n      }\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\nconst ITEM_QUERY = gql`\r\n  query itemById($id: String!) {\r\n    getItemById(id: $id) {\r\n      name\r\n      id\r\n      location\r\n      history {\r\n        name\r\n        isDepartment\r\n        timeOfTransfer\r\n      }\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\nconst TRANSFER_QUERY = gql`\r\n  mutation transferItem($itemId: String!, $username: String!) {\r\n    transferItem(id: $itemId, username: $username)\r\n  }\r\n`;\r\n\r\nconst Totalview = (props) => {\r\n  let id = null;\r\n\r\n  id = props.match.params.id;\r\n\r\n  const { data: histi } = useQuery(HISTORYITEM_QUERY, { variables: { id } });\r\n\r\n  let hisitems = null;\r\n  if (histi && histi.getItemById !== null) {\r\n    // console.log(histi.getItemById);\r\n    hisitems = histi.getItemById.history.map((obj) => {\r\n      return <HistoryItem data={obj} additiondata={histi.getItemById} />;\r\n    });\r\n  }\r\n\r\n  const { data: item } = useQuery(ITEM_QUERY, { variables: { id } });\r\n\r\n  let itemtot = null;\r\n\r\n  if (item && item.getItemById !== null) {\r\n    itemtot = <TotalViewItem data={item.getItemById} />;\r\n  }\r\n\r\n  const [ form, setForm ] = useState({\r\n    itemId   : id,\r\n    username : ''\r\n  });\r\n\r\n  const [ runTransferQuery ] = useMutation(TRANSFER_QUERY);\r\n\r\n  const onSubmit = (e) => {\r\n    runTransferQuery({\r\n      variables : form\r\n    });\r\n\r\n    // console.log(form);\r\n    window.location = `/totalview/${id}`;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={styles.transfer}>\r\n        <TextField\r\n          id=\"transferuser\"\r\n          name=\"transferuser\"\r\n          type=\"text\"\r\n          label=\"Transer to user\"\r\n          variant=\"outlined\"\r\n          value={form.username}\r\n          onChange={(e) =>\r\n            setForm({\r\n              ...form,\r\n              username : e.target.value\r\n            })}\r\n        />\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={onSubmit}>\r\n          Transfer\r\n        </Button>\r\n      </div>\r\n      <h1>Item</h1>\r\n      {itemtot}\r\n      <h1>Item History</h1>\r\n      {hisitems}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Totalview;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//material ui\r\nimport { AppBar, Toolbar, Button, Tooltip } from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\n\r\n//graphql\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\n//styles\r\nimport styles from \"./Navbar.module.css\";\r\n\r\nconst ME_QUERY = gql`\r\n  query {\r\n    me {\r\n      isAdmin\r\n    }\r\n  }\r\n`;\r\n\r\nconst Navbar = () => {\r\n  const { data } = useQuery(ME_QUERY);\r\n\r\n  // console.log(data);\r\n\r\n  let navbar = null;\r\n\r\n  if (data !== undefined && data.me !== null && data.me.isAdmin === true) {\r\n    navbar = (\r\n      <Fragment>\r\n        <Button component={Link} to=\"/\" color=\"inherit\">\r\n          Login\r\n        </Button>\r\n        <Button component={Link} to=\"/admin\" color=\"inherit\">\r\n          Admin\r\n        </Button>\r\n        <Button component={Link} to=\"/adminregister\" color=\"inherit\">\r\n          <Tooltip title=\"Add User\" placement=\"right\">\r\n            <AddCircleOutlineIcon />\r\n          </Tooltip>\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    navbar = (\r\n      <Fragment>\r\n        <Button component={Link} to=\"/\" color=\"inherit\">\r\n          Login\r\n        </Button>\r\n        <Button component={Link} to=\"/home\" color=\"inherit\">\r\n          Home\r\n        </Button>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AppBar>\r\n      <Toolbar className={styles.container}>{navbar}</Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\n//pages\r\nimport login from \"./pages/login/login\";\r\nimport home from \"./pages/home/home\";\r\nimport history from \"./pages/history/history\";\r\nimport admin from \"./pages/admin/admin\";\r\nimport adminregister from \"./pages/adminregister/adminregister\";\r\nimport items from \"./pages/items/items\";\r\nimport totalview from \"./pages/totalview/totalview\";\r\n\r\n//components\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navbar />\r\n        <div className=\"container\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={login} />\r\n            <Route exact path=\"/home\" component={home} />\r\n            <Route exact path=\"/history/:id\" component={history} />\r\n            <Route exact path=\"/admin\" component={admin} />\r\n            <Route exact path=\"/adminregister\" component={adminregister} />\r\n            <Route exact path=\"/items\" component={items} />\r\n            <Route exact path=\"/totalview/:id\" component={totalview} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  ApolloClient,\r\n  ApolloProvider,\r\n  InMemoryCache,\r\n  createHttpLink\r\n} from '@apollo/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst link = createHttpLink({\r\n  uri         : 'http://localhost:4000/graphql',\r\n  credentials : 'include'\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  cache : new InMemoryCache(),\r\n  link\r\n});\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"adminregister_form__1Qs2V\",\"icon\":\"adminregister_icon__15ehV\",\"textField\":\"adminregister_textField__iyAg4\",\"pageTitle\":\"adminregister_pageTitle__25MEm\",\"button\":\"adminregister_button__2A5PY\",\"input\":\"adminregister_input__10RDp\",\"formControl\":\"adminregister_formControl__1RN0h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__2G-XM\",\"icon\":\"login_icon__1SGPX\",\"textField\":\"login_textField__3fcsn\",\"pageTitle\":\"login_pageTitle__3tMRm\",\"button\":\"login_button__17Gqe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImage\":\"Profile_profileImage__YWabi\",\"paper\":\"Profile_paper__21lBA\",\"profileDetails\":\"Profile_profileDetails__1Z_wB\",\"login\":\"Profile_login__2ntnY\",\"signup\":\"Profile_signup__3Tk0k\",\"text\":\"Profile_text__trJIh\",\"requests\":\"Profile_requests__1g0ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"HistoryItem_main__mHun-\",\"root\":\"HistoryItem_root__3jYxJ\",\"details\":\"HistoryItem_details__21k8_\",\"content\":\"HistoryItem_content__3t1sA\",\"cover\":\"HistoryItem_cover__GFOAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"griditem\":\"items_griditem__1MJPn\",\"header\":\"items_header__2DE9h\",\"card\":\"items_card__1wAE9\",\"formControl\":\"items_formControl__1D8gu\",\"additems\":\"items_additems__1cuIa\"};"],"sourceRoot":""}